[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "redis-sre-agent"
version = "0.1.0"
description = "A LangGraph-based Redis SRE Agent for infrastructure monitoring and incident response"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # FastAPI and web framework
    "fastapi[standard]>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    # LangGraph and AI
    "langgraph>=0.2.0",
    "langgraph-checkpoint-redis>=0.1.0",
    "langchain>=0.3.25",
    "langchain-openai>=0.2.0",
    "openai>=1.0.0",
    # Redis and vector search
    "redis>=4.5.0",
    "redisvl>=0.6.0,<0.8.0",
    "sentence-transformers>=2.2.2",
    # Background tasks (Docket instead of Prefect)
    "pydocket>=0.7.0",
    # Configuration and environment
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    # HTTP and async
    "aiohttp>=3.8.0",
    "httpx>=0.25.0",
    "aiofiles>=24.1.0",
    # Data processing
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "markdownify>=0.11.6",
    "nbformat>=5.9.0",
    "PyPDF2>=3.0.0",
    # Monitoring and observability
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.41b1",
    "opentelemetry-exporter-otlp-proto-http>=1.34.0",
    # CLI and utilities
    "click>=8.0.0",
    "gitpython>=3.1.0",
    # Optional integrations (remove Slack, add monitoring tools)
    "boto3>=1.34.0", # For AWS integrations
]

[project.scripts]
redis-sre-agent = "redis_sre_agent.cli:main"

[tool.hatch.build.targets.wheel]
include = [
    "redis_sre_agent/",
    "*.py",
    "*.md", 
    "*.txt",
    "*.yaml",
    "*.yml", 
    "*.json",
    "*.toml",
    "*.sh",
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.3.0",
    "black>=23.0.0",
    "mypy>=1.8.0",
    "testcontainers>=3.7.0",
    "pre-commit>=3.6.0",
    "safety>=3.0.0",
    "bandit>=1.7.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = ["-v", "--tb=short"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
no_implicit_optional = false
ignore_missing_imports = true
disable_error_code = ["index", "attr-defined", "operator", "arg-type", "call-overload", "union-attr", "misc", "return-value", "call-arg", "no-redef", "var-annotated", "dict-item", "assignment", "type-var"]
exclude = ["reference_code/", "tests/"]
